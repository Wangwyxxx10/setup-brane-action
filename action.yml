name: setup-brane-action
description: setup brane in your actions workflow
author: Wangwyxxx10
branding:
  icon: target
  color: black
inputs:
  start_instance:
    description: starts a brane instance
    required: false
    default: false
  start_ide:
    description: starts a brane IDE
    required: false
    default: false
  use_prebuilt_images:
    description: use prebuilt docker images for bootstrapping the brane instance
    required: false
    default: true
outputs:
  jupyterlab_token:
    value: ${{ steps.start_brane_ide.outputs.jupyterlab_token }}
runs:
  using: composite
  steps:
    - name: Docker Set up the repository
      shell: bash
      run : |
        sudo apt-get update
        sudo apt-get install ca-certificates curl gnupg lsb-release
        sudo mkdir -p /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          
     - name: Docker Install Docker Engine
       shell: bash
       run: |    
         sudo apt-get update
         sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin
         sudo apt-get install docker-ce=5:20.10.16~3-0~ubuntu-focal docker-ce-cli=5:20.10.16~3-0~ubuntu-focal containerd.io docker-compose-plugin
     - name: Docker Compose
       shell: bash
       run: |
         sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
         sudo chmod +x /usr/local/bin/docker-compose
  
  
  
    - name: Install the brane CLI
      shell: bash
      id: install_brane_cli
      run: |
        docker run --rm \
          --entrypoint "/bin/sh" \
          -v "$HOME/.local/bin":/binary \
          brane-cli \
          -c "cp /brane /binary"
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        docker buildx create --use
        sudo docker buildx create --use
        sudo $HOME/.local/bin/brane list
    - name: Read input variables
      shell: bash
      run: |
        echo "START_INSTANCE=$(echo ${{ inputs.start_instance }} | awk '{print tolower($0)}')" >> $GITHUB_ENV
        echo "START_IDE=$(echo ${{ inputs.start_ide }} | awk '{print tolower($0)}')" >> $GITHUB_ENV
        echo "USE_PREBUILT_IMAGES=$(echo ${{ inputs.use_prebuilt_images }} | awk '{print tolower($0)}')" >> $GITHUB_ENV

   

    - name: Start brane instance
      shell: bash
      id: start_brane_instance
      run: |
        if [[ "$START_INSTANCE" == "true" ]] || [[ "$START_IDE" == "true" ]]; then
          make -C "$BRANE_SRC" start-instance
        else
          echo "skipping starting brane instance..."
        fi

    - name: Start brane IDE
      shell: bash
      id: start_brane_ide
      run: |
        if [[ "$START_IDE" == "true" ]]; then
          make -C "$BRANE_SRC" start-ide
          export JUPYTERLAB_TOKEN=$(make -C "$BRANE_SRC" jupyterlab-token)
          echo "::set-output name=jupyterlab_token::${JUPYTERLAB_TOKEN}"
        else
          echo "skipping starting brane IDE..."
        fi
