name: setup-brane-action
description: setup brane in your actions workflow
author: romnn
branding:
  icon: target
  color: black
inputs:
  start_instance:
    description: starts a brane instance
    required: false
    default: false
  start_ide:
    description: starts a brane IDE
    required: false
    default: false
  use_prebuilt_images:
    description: use prebuilt docker images for bootstrapping the brane instance
    required: false
    default: true
outputs:
  jupyterlab_token:
    value: ${{ steps.start_brane_ide.outputs.jupyterlab_token }}
runs:
  using: composite
  steps:
    - name: Install the brane CLI
      shell: bash
      id: install_brane_cli
      run: |
        docker run --rm \
          --entrypoint "/bin/sh" \
          -v "$HOME/.local/bin":/binary \
          epi-project/brane/brane-cli \
          -c "cp /brane /binary"
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        docker buildx create --use
        sudo docker buildx create --use
        sudo $HOME/.local/bin/brane list

    - name: Read input variables
      shell: bash
      run: |
        echo "START_INSTANCE=$(echo ${{ inputs.start_instance }} | awk '{print tolower($0)}')" >> $GITHUB_ENV
        echo "START_IDE=$(echo ${{ inputs.start_ide }} | awk '{print tolower($0)}')" >> $GITHUB_ENV
        echo "USE_PREBUILT_IMAGES=$(echo ${{ inputs.use_prebuilt_images }} | awk '{print tolower($0)}')" >> $GITHUB_ENV

    - name: Download brane source
      shell: bash
      run: |
        if [[ "$USE_PREBUILT_IMAGES" == "true" ]]; then
          echo "BRANE_SRC=${{ github.action_path }}/prebuilt" >> $GITHUB_ENV
          echo "skipping building brane instance images..."
        else
          git clone --depth 1 https://github.com/onnovalkering/brane.git
          cp -iv ./brane/contrib/config/infra-local-vm.yml ./brane/infra.yml
          echo "BRANE_SRC=./brane" >> $GITHUB_ENV
        fi

    - name: Start brane instance
      shell: bash
      id: start_brane_instance
      run: |
        if [[ "$START_INSTANCE" == "true" ]] || [[ "$START_IDE" == "true" ]]; then
          make -C "$BRANE_SRC" start-instance
        else
          echo "skipping starting brane instance..."
        fi

    - name: Start brane IDE
      shell: bash
      id: start_brane_ide
      run: |
        if [[ "$START_IDE" == "true" ]]; then
          make -C "$BRANE_SRC" start-ide
          export JUPYTERLAB_TOKEN=$(make -C "$BRANE_SRC" jupyterlab-token)
          echo "::set-output name=jupyterlab_token::${JUPYTERLAB_TOKEN}"
        else
          echo "skipping starting brane IDE..."
        fi
